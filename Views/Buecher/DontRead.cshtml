@{
    ViewData["Title"] = "DontRead";
}
@model IEnumerable<BuecherVerwaltungEmpty.Data.Buch>
@Html.AntiForgeryToken()
<h2>ðŸ“š Gelesene BÃ¼cher</h2>

<table class="table table-bordered">
    <thead>
    <tr>
        <th>Titel</th>
        <th>Autor</th>
        <th>Verlag</th>
        <th>Jahr</th>
        <th>Bewertung</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var buch in Model)
    {
        <tr>
            <td>@buch.Titel</td>
            <td>@buch.Autor</td>
            <td>@buch.Verlag</td>
            <td>@buch.Jahr</td>
            <td>
                @for (int i = 1; i <= 5; i++)
                {
                    var starClass = i <= buch.Bewertung ? "text-warning" : "text-secondary";
                    <span 
                        class="rating-star @starClass" 
                        data-id="@buch.Id" 
                        data-rating="@i" 
                        role="button"
                        style="cursor:pointer; font-size: 1.2em;">
                        &#9733;
                    </span>
                }
            </td>
        </tr>
    }
    </tbody>
</table>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const stars = document.querySelectorAll('.rating-star');

        stars.forEach(star => {
            star.addEventListener('click', function () {
                const id = this.dataset.id;
                const rating = this.dataset.rating;

                fetch('/Buecher/UpdateRating', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value
                    },
                    body: `id=${id}&rating=${rating}`
                })
                .then(res => {
                    if (res.ok) location.reload(); 
                });
            });
        });
    });
</script>
